/* Autogenerated file, DO NOT EDIT */
#pragma once

#include "keras/model.h"

namespace test {

inline auto dense_10x10x10() {
    printf("TEST dense_10x10x10\n");

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
    keras::Tensor in{10};
    in.data_ = {0.0017622582, 0.20266603, 0.16521966, 0.36438307, 0.63824564, 0.2914793, 0.1648509, 0.54725605, 0.40776014, 0.7599237};

    keras::Tensor target{10};
    target.data_ = {0.21188459, -0.24581254, 0.07860878, -0.30060345, -0.17985389, 0.37692925, 0.30091932, -0.12699997, -0.07390892, -0.39618415};
#pragma GCC diagnostic pop

    auto [model, load_time] = keras::timeit(keras::Model::load, "C:\Users\user\Desktop\keras-py2cpp\models\dense_10x10x10.model");
    auto [output, apply_time] = keras::timeit(model, in);

    for (size_t i = 0; i < target.dims_[0]; ++i)
        kassert_eq(target(i), output(i), 1e-6);

    return std::make_tuple(load_time, apply_time);
}

} // namespace test

