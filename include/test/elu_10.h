/* Autogenerated file, DO NOT EDIT */
#pragma once

#include "keras/model.h"

namespace test {

inline auto elu_10() {
    printf("TEST elu_10\n");

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
    keras::Tensor in{10};
    in.data_ = {0.31526828, 0.88927186, 0.61908555, 0.9075579, 0.3677426, 0.068072155, 0.5396773, 0.07200916, 0.27700916, 0.6080711};

    keras::Tensor target{1};
    target.data_ = {0.46176732};
#pragma GCC diagnostic pop

    auto [model, load_time] = keras::timeit(keras::Model::load, "C:\Users\user\Desktop\keras-py2cpp\models\elu_10.model");
    auto [output, apply_time] = keras::timeit(model, in);

    for (size_t i = 0; i < target.dims_[0]; ++i)
        kassert_eq(target(i), output(i), 1e-6);

    return std::make_tuple(load_time, apply_time);
}

} // namespace test

