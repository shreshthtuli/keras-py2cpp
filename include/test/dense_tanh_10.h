/* Autogenerated file, DO NOT EDIT */
#pragma once

#include "keras/model.h"

namespace test {

inline auto dense_tanh_10() {
    printf("TEST dense_tanh_10\n");

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
    keras::Tensor in{10};
    in.data_ = {0.35833415, 0.2786617, 0.014828034, 0.15175872, 0.028648445, 0.5916903, 0.55492, 0.7405799, 0.09494486, 0.2340872};

    keras::Tensor target{10};
    target.data_ = {-0.1593648, -0.28552344, 0.13872169, -0.13855971, 0.08908599, 0.22811958, -0.15344186, -0.0353939, -0.0785726, 0.21720274};
#pragma GCC diagnostic pop

    auto [model, load_time] = keras::timeit(keras::Model::load, "C:\Users\user\Desktop\keras-py2cpp\models\dense_tanh_10.model");
    auto [output, apply_time] = keras::timeit(model, in);

    for (size_t i = 0; i < target.dims_[0]; ++i)
        kassert_eq(target(i), output(i), 1e-6);

    return std::make_tuple(load_time, apply_time);
}

} // namespace test

