/* Autogenerated file, DO NOT EDIT */
#pragma once

#include "keras/model.h"

namespace test {

inline auto conv_3x3() {
    printf("TEST conv_3x3\n");

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
    keras::Tensor in{3, 3, 1};
    in.data_ = {0.049983878, 0.8036076, 0.31442928, 0.4538584, 0.37097615, 0.6420858, 0.18811205, 0.7656628, 0.68923223};

    keras::Tensor target{1};
    target.data_ = {0.25815964};
#pragma GCC diagnostic pop

    auto [model, load_time] = keras::timeit(keras::Model::load, "C:\Users\user\Desktop\keras-py2cpp\models\conv_3x3.model");
    auto [output, apply_time] = keras::timeit(model, in);

    for (size_t i = 0; i < target.dims_[0]; ++i)
        kassert_eq(target(i), output(i), 1e-6);

    return std::make_tuple(load_time, apply_time);
}

} // namespace test

