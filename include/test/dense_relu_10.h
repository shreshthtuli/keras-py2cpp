/* Autogenerated file, DO NOT EDIT */
#pragma once

#include "keras/model.h"

namespace test {

inline auto dense_relu_10() {
    printf("TEST dense_relu_10\n");

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
    keras::Tensor in{10};
    in.data_ = {0.92374027, 0.84729755, 0.79846996, 0.36431324, 0.4125521, 0.65966386, 0.4882543, 0.18952136, 0.061855037, 0.7706094};

    keras::Tensor target{10};
    target.data_ = {0.047118366, 0.15229227, 0., 0.20055553, 0., 0., 0., 0.051888786, 0.093287945, 0.19766583};
#pragma GCC diagnostic pop

    auto [model, load_time] = keras::timeit(keras::Model::load, "C:\Users\user\Desktop\keras-py2cpp\models\dense_relu_10.model");
    auto [output, apply_time] = keras::timeit(model, in);

    for (size_t i = 0; i < target.dims_[0]; ++i)
        kassert_eq(target(i), output(i), 1e-6);

    return std::make_tuple(load_time, apply_time);
}

} // namespace test

